name: Lint Code With RuboCop

on:
  pull_request:
    paths:
      - '**/*.rb'
  push:
    paths:
      - '**/*.rb'

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install dependencies
        run: |
          bundle config set without 'production staging test'
          bundle install

      - name: Get file changes
        id: get_file_changes
        uses: trilom/file-changes-action@v1.2.3
        with:
          output: ' '

      - name: Filter files based on RuboCop exclusions
        id: filter_files
        run: |
          # Read the excluded paths from the RuboCop configuration
          excluded_paths=$(ruby -r yaml -e 'puts YAML.load_file(".rubocop.yml")["AllCops"]["Exclude"].join(" ")')
          echo "Excluded paths: $excluded_paths"

          # Filter out the excluded paths from the changed files
          files=$(echo "${{ steps.get_file_changes.outputs.files }}" | tr '\n' ' ')
          filtered_files=""
          for file in $files; do
            if [[ ! $file =~ $excluded_paths ]]; then
              filtered_files="$filtered_files $file"
            fi
          done

          echo "Filtered files: $filtered_files"
          echo "::set-output name=files::$filtered_files"

      - name: Echo file changes
        run: |
          echo Changed files: ${{ steps.get_file_changes.outputs.files }}

      - name: Run RuboCop on changed files
        run: |
          files=$(echo "${{ steps.get_file_changes.outputs.files }}" | tr '\n' ' ')
          if [ -n "$files" ]; then
            echo "Running RuboCop on changed Ruby files..."
            bundle exec rubocop $files
          else
            echo "No Ruby files changed"
          fi
